"#version 120\n",
"varying vec4 position;\n",
"varying vec3 normal;\n",
"uniform sampler2D material_texture;\n",
"uniform sampler2D texture_overlay;\n",
"uniform int symmetric;\n",
"uniform int line_mode;\n",
"uniform int show_expmap;\n",
"uniform float isoline_interval;\n",
"uniform float overlay_alpha;\n",
"uniform int overlay_v_flipped;\n",
"\n",
"void main() {\n",
"    vec3 nnormal = normalize(normal);\n",
"    nnormal.y *= -1.0;\n",
"    vec2 material_texCoord = nnormal.xy * 0.45 + vec2(0.5, 0.5);\n",
"    vec4 fragColor = texture2D(material_texture, material_texCoord);\n",
"    if (symmetric != 0 && position[0] < 0.0)\n",
"        fragColor.rgb *= 0.7;\n",
"\n",
"    if (show_expmap != 0) {\n",
"        vec2 uv = abs(gl_TexCoord[0].xy);\n",
"        if (uv != vec2(0.0)) {\n",
"            vec2 uv1 = uv / isoline_interval;\n",
"            vec2 uv2 = uv1 * 5.0;\n",
"            vec2 d1 = uv1 - floor(uv1);\n",
"            vec2 d2 = uv2 - floor(uv2);\n",
"            vec2 e1 = abs(d1 - vec2(0.5));\n",
"            vec2 e2 = abs(d2 - vec2(0.5));\n",
"            const float line_ratio = 0.03;\n",
"            if (e1.x > 0.5 - line_ratio || e1.y > 0.5 - line_ratio) fragColor.rgb = vec3(0.4);\n",
"            if (uv1.x < line_ratio) fragColor.rgb += vec3(-0.3,  0.5, -0.3);\n",
"            if (uv1.y < line_ratio) fragColor.rgb += vec3( 0.5, -0.3, -0.3);\n",
"            if (e2.x > 0.5 - line_ratio || e2.y > 0.5 - line_ratio) fragColor.rgb *= 0.75;\n",
"        }\n",
"    }\n",
"    vec2 uv = abs(gl_TexCoord[1].xy);\n",
"    if (overlay_v_flipped != 0)\n",
"        uv.y = 1.0 - uv.y;\n",
"    vec4 overlay_color = texture2D(texture_overlay, uv);\n",
"    float alpha = overlay_color.a * overlay_alpha;\n",
"    fragColor.rgb = (1 - alpha) * fragColor.rgb + alpha * overlay_color.rgb;\n",
"\n",
"    if (line_mode != 0)\n",
"        fragColor.rgb *= 0.1;\n",
"\n",
"    gl_FragColor = fragColor;\n",
"}\n",
